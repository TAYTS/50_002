module display_test_cases #(
    DIGITS = 4 : DIGITS > 0,   // Set the number segments need to display
    DIV = 16 : DIV >= 0        // control the switching speed of characters
  )(
    input clk,                 // clock
    input rst,                 // reset
    input values [DIGITS][4],  // values to show
    output seg [7],            // LED segments
    output sel [DIGITS]        // Digit select
  ) {

  // number of bits required to store DIGITS-1
  const DIGIT_BITS = $clog2(DIGITS);
  
  // iterate from 0 to CHARS-1 to diplay each character
  .clk(clk), .rst(rst) {
    counter ctr (#DIV(DIV), #SIZE(DIGIT_BITS), #TOP(DIGITS-1));
  }

  seg_digit seg_digit;                      // segment decoder
  decoder digit_dec (#WIDTH(DIGIT_BITS));   // digit decoder

  always {
    seg_digit.char = values[ctr.value];     // select the value for the active digit
    seg = seg_digit.segs;                   // output the decoded value

    digit_dec.in = ctr.value;               // decode active digit to one-hot
    sel = digit_dec.out;                    // output the active digit
  }
}