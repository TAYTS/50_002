/*
 * Calculate 16 bits multiplication.
 * Output with the least significant 16bits.
 */
module multiply (
    input a[16],
    input b[16],
    output out[16]
  ) {

  sig and_row[16][16]; 
  var i;
  var j;
  const BIT = 16;
  
  // Initialise all the 16 bits adder
  addmod fa1;
  addmod fa2;
  addmod fa3;
  addmod fa4;
  addmod fa5;
  addmod fa6;
  addmod fa7;
  addmod fa8;
  addmod fa9;
  addmod fa10;
  addmod fa11;
  addmod fa12;
  addmod fa13;
  addmod fa14;
  addmod fa15;
  
  always {
    fa1.alufn = 1b0;
    fa2.alufn = 1b0;
    fa3.alufn = 1b0;
    fa4.alufn = 1b0;
    fa5.alufn = 1b0;
    fa6.alufn = 1b0;
    fa7.alufn = 1b0;
    fa8.alufn = 1b0;
    fa9.alufn = 1b0;
    fa10.alufn = 1b0;
    fa11.alufn = 1b0;
    fa12.alufn = 1b0;
    fa13.alufn = 1b0;
    fa14.alufn = 1b0;
    fa15.alufn = 1b0;
    
    // Populate all the AND gates
    for (i = 0; i < BIT; i++) {
      for (j = 0; j < BIT; j++) {
        and_row[i][j] = a[j] & b[i];
      } 
    }
    
    // SUM row
    // 1 row
    fa1.a = and_row[0];
    fa1.b = and_row[1] << 1;
    
    // 2 row
    fa2.a = fa1.out;
    fa2.b = and_row[2] << 2;
    
    // 3 row
    fa3.a = fa2.out;
    fa3.b = and_row[3] << 3;
    
    // 4 row
    fa4.a = fa3.out;
    fa4.b = and_row[4] << 4;
    
    // 5 row
    fa5.a = fa4.out;
    fa5.b = and_row[5] << 5;
    
    // 6 row
    fa6.a = fa5.out;
    fa6.b = and_row[6] << 6;
    
    // 7 row
    fa7.a = fa6.out;
    fa7.b = and_row[7] << 7;
    
    // 8 row
    fa8.a = fa7.out;
    fa8.b = and_row[8] << 8;
    
    // 9 row
    fa9.a = fa8.out;
    fa9.b = and_row[9] << 9;
    
    // 10 row
    fa10.a = fa9.out;
    fa10.b = and_row[10] << 10;
    
    // 11 row
    fa11.a = fa10.out;
    fa11.b = and_row[11] << 11;
    
    // 12 row
    fa12.a = fa11.out;
    fa12.b = and_row[12] << 12;
    
    // 13 row
    fa13.a = fa12.out;
    fa13.b = and_row[13] << 13;
    
    // 14 row
    fa14.a = fa13.out;
    fa14.b = and_row[14] << 14;
    
    // 15 row
    fa15.a = fa14.out;
    fa15.b = and_row[15] << 15;
    
    out = fa15.out;
    
  }
}
